name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "new/**"

env:
  DOCKER_BUILDKIT: "1"

jobs:
  build:
    strategy:
      matrix:
        component: ['frontend', 'backend']

    name: Build Container Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/holzmaster/kt-${{ matrix.component }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ./${{ matrix.component }}
          build-contexts: shared=shared
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-services:
    strategy:
      matrix:
        component: ['pm-service']

    name: Build Service images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/holzmaster/kt-${{ matrix.component }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ./service/${{ matrix.component }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-tasks:
    strategy:
      matrix:
        component: ['update-zip-codes', 'prune-inactive-users', 'update-metadata', 'spam']

    name: Build Task Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/holzmaster/kt-task-${{ matrix.component }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ./tasks/${{ matrix.component }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs:
      - build
      - build-tasks
      - build-services

    name: Deploy FE & BE & Tasks
    runs-on: ubuntu-latest

    concurrency: production

    environment:
      name: production
      url: https://kellertreff.com

    steps:
      - name: Rollout FE & BE
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment kt-be-prod kt-fe-prod kt-pm-service-prod
